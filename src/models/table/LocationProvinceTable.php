<?php

namespace modava\location\models\table;

use cheatsheet\Time;
use modava\location\models\query\LocationProvinceQuery;
use Yii;
use yii\db\ActiveRecord;

class LocationProvinceTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public static function tableName()
    {
        return 'location_province';
    }

    public static function find()
    {
        return new LocationProvinceQuery(get_called_class());
    }

    public function getCountryHasOne()
    {
        return $this->hasOne(LocationCountryTable::class, ['id' => 'CountryId']);
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-get-province-by-country-' . $this->CountryId . '-' . $this->language
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-get-province-by-country-' . $this->CountryId . '-' . $this->language
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getProvinceByCountry($country = 237, $lang = 'vi')
    {
//        $cache = Yii::$app->cache;
//        $key = 'redis-get-province-by-country-' . $country . '-' . $lang;
//        $data = $cache->get($key);
//        if ($data === false) {
            $query = self::find()->where([self::tableName() . '.CountryId' => $country]);
            if ($lang !== null) $query->andWhere([self::tableName() . '.language' => $lang]);
            $data = $query->sortDescById()->all();
//            $cache->set($key, $data, Time::SECONDS_IN_A_MONTH);
//        }
        return $data;
    }
}
